# Task data structure for holding individual tasks
# Task is sent to browsers and is reported for status update
# Task is generated by Generator for each search/update operation

class Task:

    # private:
    #   C1: str - from location
    #   C2: str - to location
    #   T: date
    #   status: int - 1 for completed; 0 for incomplete; 0.5 for error; -1 for expired

    def __init__(self, C1, C2, T):
        self.C1 = C1
        self.C2 = C2
        self.T = T
        self.status = 0

    def __str__(self):
        return "{} - {} - {}: {}".format(self.C1, self.C2, self.T, self.status)

    def getCT(self) -> dict:
        return {'C1': self.C1, 'C2': self.C2, 'T': self.T, 'status': 0}

    def markCompleted(self) -> None:
        self.status = 1

    def markError(self, code: int) -> None:
        self.status = code
